ggplot(gtrends_war_web, aes(date, hits)) +
geom_line(color='darkseagreen3') +
theme_minimal() +
ggtitle("Google Trends - Evolving Interest in Search Word 'War'") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = as.POSIXct("2022-02-24"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2022-02-24"), y=80,
label="Start Russion Invasion of Ukraine", vjust=2, color="black") +
geom_vline(xintercept = as.POSIXct("2022-02-24"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2023-07-23"), y=80,
label="Israel-Hammas War", vjust=2, color="black",
size=3)
# Convert 'date' column to POSIXct format
gtrends_war_web$date <- as.POSIXct(gtrends_war_web$date, format = "%Y-%m-%d")
ggplot(gtrends_war_web, aes(date, hits)) +
geom_line(color='darkseagreen3') +
theme_minimal() +
ggtitle("Google Trends - Evolving Interest in Search Word 'War'") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = as.POSIXct("2022-02-24"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2022-02-24"), y=80,
label="Start Russion Invasion of Ukraine", vjust=2, color="black") +
geom_vline(xintercept = as.POSIXct("2023-10-23"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2023-10-23"), y=80,
label="Israel-Hammas War", vjust=2, color="black",
size=3)
# Convert 'date' column to POSIXct format
gtrends_war_web$date <- as.POSIXct(gtrends_war_web$date, format = "%Y-%m-%d")
ggplot(gtrends_war_web, aes(date, hits)) +
geom_line(color='darkseagreen3') +
theme_minimal() +
ggtitle("Google Trends - Evolving Interest in Search Word 'War'") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = as.POSIXct("2022-02-24"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2022-02-24"), y=80,
label="Start Russion Invasion of Ukraine", vjust=2, color="black") +
geom_vline(xintercept = as.POSIXct("2023-10-07"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2023-10-07"), y=80,
label="Start Israel-Hammas War", vjust=2, color="black",
size=3)
# Convert 'date' column to POSIXct format
gtrends_war_web$date <- as.POSIXct(gtrends_war_web$date, format = "%Y-%m-%d")
ggplot(gtrends_war_web, aes(date, hits)) +
geom_line(color='darkseagreen3') +
theme_minimal() +
ggtitle("Google Trends - Evolving Interest in Search Word 'War'") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)) +
geom_vline(xintercept = as.POSIXct("2022-02-24"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2022-02-24"), y=80,
label="Start Russion Invasion of Ukraine", vjust=2, color="black") +
geom_vline(xintercept = as.POSIXct("2023-10-07"), linetype="dashed",
color = "black", size=0.5) +
annotate('label', x=as.POSIXct("2023-10-07"), y=80,
label="Start Israel-Hammas War", vjust=2, color="black")
# Histogram
ggplot(gtrends_war_web, aes(hits)) +
geom_histogram(color='darkseagreen3', fill='darkseagreen3') +
facet_wrap(~Ticker) +
ggtitle("Search Word 'War' Distribution") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# Histogram
ggplot(gtrends_war_web, aes(hits)) +
geom_histogram(color='darkseagreen3', fill='darkseagreen3') +
ggtitle("Search Word 'War' Distribution") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
adf.test(ticker_data)
View(ticker_data)
adf.test(ticker_data$XLK.Adjusted)
# Line Chart
ggplot(ticker_data_df, aes(Date, Value)) +
geom_line(color='darkseagreen3') +
facet_wrap(~Ticker) +
ggtitle("Ticker Time Series") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
columns(ticker_data)
colnames(ticker_data)
adf.test(ticker_data$XLK.Adjusted)
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
adf.test(ticker_data$ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
adf.test(na.omit(ticker_data$ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
adf.test(na.omit(ticker_data$ticker))
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
print(ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
print(ticker_data$ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
print(ticker_data[ticker])
}
ticker_data$XLK.Adjusted
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
print(ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker_name <- replace(ticker, '"')
print(ticker_name)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker_name <- replace(ticker, '"', '')
print(ticker_name)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker_name <- gsub('"', '', ticker)
print(ticker_name)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker_name <- gsub('"', '', ticker)
print(ticker_name)
print(ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker_name <- gsub('"', '', ticker)
print(ticker_name[0])
print(ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
adf.test(ticker_data$ticker)
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
adf.test(ticker_data[[ticker]])
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
adf.test(ticker_data[ticker])
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
for (ticker in ticker_cols){
ticker_data[ticker]
}
# Check Stationarity
ticker_cols <- colnames(ticker_data)
adf.test(ticker_data$XLK.Adjusted)
# Check Stationarity
ticker_cols <- colnames(ticker_data)
adf.test(ticker_data$XLK.Adjusted)
adf.test(ticker_data$XLF.Adjusted)
ticker_cols <- c("XLK.Adjusted", "XLF.Adjusted") # Add more column names as needed
# Loop through each column and apply adf.test
for (ticker in ticker_cols) {
print(paste("ADF Test for:", ticker))
print(adf.test(ticker_data[[ticker]]))
ticker_cols <- c("XLK.Adjusted", "XLF.Adjusted") # Add more column names as needed
# Loop through each column and apply adf.test
for (ticker in ticker_cols) {
print(paste("ADF Test for:", ticker))
print(adf.test(ticker_data[[ticker]]))}
ticker_cols <- c("XLK.Adjusted", "XLF.Adjusted") # Add more column names as needed
# Loop through each column and apply adf.test
for (ticker in ticker_cols) {
print(paste("ADF Test for:", ticker))
print(adf.test(ticker_data[[ticker]]))}
ticker_cols <- c("XLK.Adjusted", "XLF.Adjusted") # Add more column names as needed
# Loop through each column and apply adf.test
for (ticker in ticker_cols) {
print(paste("ADF Test for:", ticker))
print(adf.test(ticker_data$ticker))}
ticker_cols <- c("XLK.Adjusted", "XLF.Adjusted") # Add more column names as needed
# Loop through each column and apply adf.test
for (ticker in ticker_cols) {
print(ticker)
print(paste("ADF Test for:", ticker))
print(adf.test(ticker_data$ticker))}
ticker_cols <- c("XLK.Adjusted", "XLF.Adjusted") # Add more column names as needed
# Loop through each column and apply adf.test
for (ticker in ticker_cols) {
print(ticker)
print(paste("ADF Test for:", ticker))
print(adf.test(ticker_data[ticker])}
sapply(ticker_data, adf.test)
ticker_data$XLK.Adjusted <- diff(log(ticker_data$XLK.Adjusted))
ticker_data$XLF.Adjusted <- diff(log(ticker_data$XLF.Adjusted))
ticker_data$XLK.Adjusted <- diff(log(ticker_data$XLK.Adjusted))
ticker_data$XLF.Adjusted <- diff(log(ticker_data$XLF.Adjusted))
ticker_data$XLY.Adjusted <- diff(log(ticker_data$XLY.Adjusted))
ticker_data$XLE.Adjusted <- diff(log(ticker_data$XLE.Adjusted))
# Already stationary ticker series
ticker_data$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
# Ticker Data
ticker_data <- NULL
tickers_index <- c("XLK", "XLF", "XLV", "XLY", "XLE", "XLU")
for (Ticker in tickers_index){
ticker_data <- cbind(ticker_data,
getSymbols.yahoo(Ticker, from="2021-12-01", to="2023-12-01",
periodicity = "weekly",auto.assign=FALSE)[,6])
}
# Check length and min max date
length(ticker_data$XLK.Adjusted)
summary(ticker_data)[c(1, 6)]
head(ticker_data)
ticker_data_differenced$XLK.Adjusted <- diff(log(ticker_data$XLK.Adjusted))
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- diff(log(ticker_data$XLK.Adjusted))
ticker_data_differenced$XLF.Adjusted <- diff(log(ticker_data$XLF.Adjusted))
ticker_data_differenced$XLY.Adjusted <- diff(log(ticker_data$XLY.Adjusted))
ticker_data_differenced$XLE.Adjusted <- diff(log(ticker_data$XLE.Adjusted))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
View(ticker_data_differenced)
View(ticker_data)
adf.test(gtrends_war_web)
adf.test(gtrends_war_web$hits)
# Histogram
ggplot(gtrends_war_web, aes(hits)) +
geom_histogram(color='darkseagreen3', fill='darkseagreen3') +
ggtitle("Search Word 'War' Distribution") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
gtrends_war_web_differenced <- dif(log(gtrends_war_web$hits))
gtrends_war_web_differenced <- diff(log(gtrends_war_web$hits))
gtrends_war_web
gtrends_war_web_differenced <- diff(log(gtrends_war_web$hits))
gtrends_war_web_differenced
gtrends_war_web_differenced$hits <- diff(log(gtrends_war_web$hits))
gtrends_war_web_differenced
gtrends_war_web_differenced$hits <- diff(log(gtrends_war_web$hits))
gtrends_war_web_differenced <- cbind(gtrends_war_web$date, gtrends_war_web_differenced$hits)
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
logged_diff_hits <- diff(log(gtrends_war_web$hits))
corresponding_dates <- gtrends_war_web$date[non_na_indices + 1] # +1 due to diff reduction
logged_diff_hits <- diff(log(gtrends_war_web$hits))
corresponding_dates <- gtrends_war_web$date[2, ] # +1 due to diff reduction
ticker_data[1,]
ticker_data[1,]
ticker_data
ticker_data[1,]
ticker_data[1:,]
ticker_data[1,]
ticker_data[,-1]
ticker_data[,-2]
ticker_data[-1,]
ticker_data[-1,]
ticker_data
logged_diff_hits <- diff(log(gtrends_war_web$hits))
corresponding_dates <- gtrends_war_web$date[-1,] # +1 due to diff reduction
logged_diff_hits <- na.omit(diff(log(gtrends_war_web$hits)))
corresponding_dates <- gtrends_war_web$date[-1,] # +1 due to diff reduction
gtrends_war_web$date[-1,]
gtrends_war_web$date
gtrends_war_web$date[1]
gtrends_war_web$date[-1,]
gtrends_war_web$date[-1,]
gtrends_war_web[-1,]
gtrends_war_web[-1,]$date
logged_diff_hits <- na.omit(diff(log(gtrends_war_web$hits)))
corresponding_dates <- gtrends_war_web[-1,]$date # +1 due to diff reduction
gtrends_war_web_differenced <- data.frame(
date = corresponding_dates,
hits = logged_diff_hits
)
gtrends_war_web_differenced
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data)[c(1, 6)]
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data_differenced)[c(1, 6)]
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data_differenced)
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
ticker_data_differenced$Date <- ticker_data[-1]$Date
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data_differenced)
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
ticker_data_differenced$Date <- ticker_data[-1]$Date # Remove first date since it got removed from differencing
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data_differenced)
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
View(ticker_data_differenced)
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
# Remove first date since it got removed from differencing
ticker_data_differenced$Date <- ticker_data[-1]$Date
View(ticker_data_differenced)
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
# Remove first date since it got removed from differencing
index(ticker_data_differenced) <- ticker_data[-1]$Date
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
# Remove first date since it got removed from differencing
ticker_data_differenced <- ticker_data[-1]$Date
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
# Remove first date since it got removed from differencing
ticker_data_differenced$Date <- ticker_data[-1]$Date
View(ticker_data_differenced)
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data_differenced)
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Ticker Data
ticker_data <- NULL
tickers_index <- c("XLK", "XLF", "XLV", "XLY", "XLE", "XLU")
for (Ticker in tickers_index){
ticker_data <- cbind(ticker_data,
getSymbols.yahoo(Ticker, from="2021-12-01", to="2023-12-01",
periodicity = "weekly",auto.assign=FALSE)[,6])
}
# Check length and min max date
length(ticker_data$XLK.Adjusted)
summary(ticker_data)[c(1, 6)]
head(ticker_data)
# Increase date by one day to match ticker data
gtrends_war_web$date <- gtrends_war_web$date + days(1)
# Check length and min max date
length(gtrends_war_web$date)
min(gtrends_war_web$date)
max(gtrends_war_web$date)
# Remove first date of ticker data to match gtrends data
ticker_data <- ticker_data[-1,]
ticker_data
# Ticker Data
ticker_data <- NULL
tickers_index <- c("XLK", "XLF", "XLV", "XLY", "XLE", "XLU")
for (Ticker in tickers_index){
ticker_data <- cbind(ticker_data,
getSymbols.yahoo(Ticker, from="2021-12-01", to="2023-12-01",
periodicity = "weekly",auto.assign=FALSE)[,6])
}
# Check length and min max date
length(ticker_data$XLK.Adjusted)
summary(ticker_data)[c(1, 6)]
head(ticker_data)
# Google Trends data
gtrends_war_web <- gtrends(
keyword = "war",
time = "2021-11-30 2023-12-01",
gprop = "web"
)$interest_over_time
gtrends_war_web
# Increase date by one day to match ticker data
gtrends_war_web$date <- gtrends_war_web$date + days(1)
# Check length and min max date
length(gtrends_war_web$date)
min(gtrends_war_web$date)
max(gtrends_war_web$date)
# Remove first date of ticker data to match gtrends data
ticker_data <- ticker_data[-1,]
ticker_data
ticker_data_differenced <- NULL
ticker_data_differenced$XLK.Adjusted <- na.omit(diff(log(ticker_data$XLK.Adjusted)))
ticker_data_differenced$XLF.Adjusted <- na.omit(diff(log(ticker_data$XLF.Adjusted)))
ticker_data_differenced$XLY.Adjusted <- na.omit(diff(log(ticker_data$XLY.Adjusted)))
ticker_data_differenced$XLE.Adjusted <- na.omit(diff(log(ticker_data$XLE.Adjusted)))
# Already stationary ticker series
ticker_data_differenced$XLV.Adjusted <- log(ticker_data$XLV.Adjusted)
ticker_data_differenced$XLU.Adjusted <- log(ticker_data$XLU.Adjusted)
adf.test(gtrends_war_web$hits)
logged_diff_hits <- na.omit(diff(log(gtrends_war_web$hits)))
corresponding_dates <- gtrends_war_web[-1,]$date # +1 due to diff reduction
gtrends_war_web_differenced <- data.frame(
date = corresponding_dates,
hits = logged_diff_hits
)
gtrends_war_web_differenced
# Check length and min max date
length(ticker_data_differenced$XLK.Adjusted)
summary(ticker_data_differenced)
# Check length and min max date
length(gtrends_war_web_differenced$date)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Check length of time series
length(gtrends_war_web_differenced$date) = length(ticker_data_differenced$XLK.Adjusted)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Check length of time series
length(gtrends_war_web_differenced$date) == length(ticker_data_differenced$XLK.Adjusted)
min(gtrends_war_web_differenced$date)
max(gtrends_war_web_differenced$date)
# Google Trends data
gtrends_war_web <- gtrends(
keyword = "war",
time = "2021-11-30 2023-12-01",
gprop = "web"
)$interest_over_time
gtrends_war_web
